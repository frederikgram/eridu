
<type-wrapper> ::=
    | array
    | address

<type-specifier> ::=
    | char
    | string
    | int
    | float
    | double
    | struct
    | enum
    | callable
    | type
    | address
    | bool

<type> ::=
    | <type-specifier>
    | <type-wrapper> <type-specifier>
    | "[" <type-specifier> "]"
    | "[" (<type-wrapper> <type-specifier>)* "]"
    
<assignment-operator> ::=
    | =
    | *=
    | /=
    | %=
    | +=
    | -=

<unary-operator> ::=
    | !
    | -

<expr-stmt> ::=
    | expr? ";"


<stmt> ::= 
    | "if" "(" <expr> ")" <stmt> ("else" <stmt>)?
    | "for" "(" <expr-stmt> <expr>? ";" <expr>? ")" <stmt> 
    | "while" "(" <expr> ")" <stmt>
    | "continue" ";"
    | "break" ";"
    | "return" <expr>? ";"
    | "{" <compound-stmt>
    | <expr-stmt>

